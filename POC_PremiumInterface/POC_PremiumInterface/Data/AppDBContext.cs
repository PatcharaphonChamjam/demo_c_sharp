// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using POC_PremiumInterface.Models;

namespace POC_PremiumInterface.Data
{
    public partial class AppDBContext : DbContext
    {
        public AppDBContext()
        {
        }

        public AppDBContext(DbContextOptions<AppDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<MappingBank> MappingBank { get; set; }
        public virtual DbSet<MappingBankAccount> MappingBankAccount { get; set; }
        public virtual DbSet<MappingProductType> MappingProductType { get; set; }
        public virtual DbSet<Queue> Queue { get; set; }
        public virtual DbSet<QueueType> QueueType { get; set; }
        public virtual DbSet<ZPMTransaction> ZPMTransaction { get; set; }
        public virtual DbSet<ZPMType> ZPMType { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<MappingBank>(entity =>
            {
                entity.Property(e => e.BankId).ValueGeneratedNever();

                entity.Property(e => e.BankShortName).IsUnicode(false);

                entity.Property(e => e.MappingCode).IsUnicode(false);
            });

            modelBuilder.Entity<MappingBankAccount>(entity =>
            {
                entity.HasKey(e => e.BankAccountNo)
                    .HasName("PK_MappingBank_1");

                entity.Property(e => e.BankAccountNo).IsUnicode(false);

                entity.Property(e => e.MappingCode).IsUnicode(false);
            });

            modelBuilder.Entity<MappingProductType>(entity =>
            {
                entity.Property(e => e.ProductTypeId).ValueGeneratedNever();

                entity.Property(e => e.MappingCode).IsUnicode(false);
            });

            modelBuilder.Entity<Queue>(entity =>
            {
                entity.Property(e => e.QueueId).ValueGeneratedNever();

                entity.HasOne(d => d.QueueType)
                    .WithMany(p => p.Queues)
                    .HasForeignKey(d => d.QueueTypeId)
                    .HasConstraintName("FK_Queue_QueueType");
            });

            modelBuilder.Entity<ZPMTransaction>(entity =>
            {
                entity.Property(e => e.ZPMTransactionId).ValueGeneratedNever();

                entity.HasOne(d => d.ZPMType)
                    .WithMany(p => p.ZPMTransactions)
                    .HasForeignKey(d => d.ZPMTypeId)
                    .HasConstraintName("FK_ZPMTransaction_ZPMType");
            });

            modelBuilder.Entity<ZPMType>(entity =>
            {
                entity.Property(e => e.ZPMTypeCode).IsUnicode(false);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}